---
title: "404 - Page Not Found"
description: "This is a custom 404 error page."
---
import Layout from '../layouts/Layout.astro';
import CyberLayout from '../layouts/CyberLayout.astro';
import TypedText from '../components/TypedText.astro';

<Layout title="404 - Page Not Found">
	<CyberLayout>
		<div class="terminal-container">
			<div class="terminal-header">
				<div class="terminal-title">SYSTEM ERROR</div>
				<div class="terminal-controls">
					<span class="control minimize"></span>
					<span class="control maximize"></span>
					<span class="control close"></span>
				</div>
			</div>
			
			<div class="terminal-body">
				<div class="terminal-line">
					<span class="prompt">$</span>
					<TypedText text="./locate_page.sh" delay={500} speed={70} />
				</div>
				
				<div class="terminal-output">
					<TypedText text="ERROR 404: LOCATION NOT FOUND" delay={2000} speed={30} className="error-title" />
					
					<div class="error-content" style="opacity: 0;">
						<div class="ascii-error">
							<pre>
   _____                    _____                            
  / ____|                  |  __ \                           
 | |  __  __ _ _ __ ___   | |__) |_ _ __ ___ ___  _ __ ___  
 | | |_ |/ _` | '_ ` _ \  |  ___/ _| '__/ __/ _ \| '_ ` _ \ 
 | |__| | (_| | | | | | | | |  | (_| |  | (_| (_) | | | | | |
  \_____|\__,_|_| |_| |_| |_|   \__,_|   \___\___/|_| |_| |_|
							</pre>
						</div>
						
						<p class="error-message">The mission file you're looking for doesn't exist or has been moved to a different location.</p>
						
						<div class="error-actions">
							<p>Recommended actions:</p>
							<ul>
								<li>Return to <a href="/" class="action-link">Mission Control</a></li>
								<li>Check if you typed the URL correctly</li>
								<li>Contact your mission commander if you believe this is an error</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
		</div>
	</CyberLayout>
</Layout>

<style>
	.terminal-container {
		width: 100%;
		max-width: 800px;
		margin: 0 auto;
		background-color: var(--terminal-bg);
		border-radius: 8px;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
		overflow: hidden;
	}
	
	.terminal-header {
		background-color: var(--terminal-header);
		padding: 10px 15px;
		display: flex;
		justify-content: space-between;
		align-items: center;
		border-bottom: 1px solid var(--terminal-dim);
	}
	
	.terminal-title {
		color: var(--terminal-dim);
		font-size: 0.9em;
		font-weight: bold;
	}
	
	.terminal-controls {
		display: flex;
		gap: 8px;
	}
	
	.control {
		width: 12px;
		height: 12px;
		border-radius: 50%;
		display: inline-block;
	}
	
	.minimize {
		background-color: #f1fa8c;
	}
	
	.maximize {
		background-color: #50fa7b;
	}
	
	.close {
		background-color: #ff5555;
	}
	
	.terminal-body {
		padding: 20px;
		color: var(--terminal-text);
		font-family: 'Courier New', monospace;
		min-height: 400px;
	}
	
	.terminal-line {
		display: flex;
		align-items: center;
		margin-bottom: 15px;
	}
	
	.prompt {
		color: var(--terminal-error);
		margin-right: 10px;
	}
	
	.terminal-output {
		margin-top: 20px;
	}
	
	.error-title {
		color: var(--terminal-error);
		font-size: 1.2em;
		font-weight: bold;
		margin-bottom: 20px;
		display: block;
	}
	
	.error-content {
		transition: opacity 1s ease-in-out;
		opacity: 0;
	}
	
	.ascii-error {
		margin: 20px 0;
		overflow-x: auto;
	}
	
	.ascii-error pre {
		color: var(--terminal-error);
		font-size: 0.7em;
		line-height: 1.2;
		margin: 0;
		text-align: center;
	}
	
	.error-message {
		margin: 20px 0;
		padding: 10px;
		border: 1px solid var(--terminal-error);
		border-radius: 4px;
		background-color: rgba(255, 0, 0, 0.1);
	}
	
	.error-actions {
		margin-top: 20px;
	}
	
	.action-link {
		color: var(--terminal-accent);
		text-decoration: underline;
		transition: color 0.3s;
	}
	
	.action-link:hover {
		color: var(--terminal-success);
	}
	
	@media (min-width: 768px) {
		.ascii-error pre {
			font-size: 0.9em;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		// Show error content after title is typed
		const errorTitle = document.querySelector('.error-title');
		if (errorTitle) {
			errorTitle.addEventListener('typingComplete', () => {
				setTimeout(() => {
					const errorContent = document.querySelector('.error-content');
					if (errorContent) {
						errorContent.style.opacity = '1';
					}
				}, 500);
			});
		}
	});
</script>
